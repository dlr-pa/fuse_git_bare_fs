# https://docs.github.com/en/actions/learn-github-actions/introduction-to-github-actions
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

# todo:
# https://docs.github.com/en/actions/guides/building-and-testing-python
# https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows

name: unittest_pytest_coverage_doc

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  pep8_check:
    # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: apt-get update
      run: sudo apt-get update
    - name: install dependencies for PEP 8 code style check (ubuntu packages)
      run: sudo apt-get install pep8 pylint3 python3-recommonmark python3-pytest
    - name: install dependencies (cfchecker via pip)
      run: pip3 install cfchecker
    - name: check PEP 8 code style
      run: pep8 --show-source --show-pep8 --statistics $(find -name "*.py")
    - name: run pylint
      run: pylint -j 3 --include-naming-hint=y --good-names=i,j,k,fd $(find -name "*.py")

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      # https://github.com/marketplace/actions/checkout
    - uses: actions/setup-python@v2
      # https://github.com/marketplace/actions/setup-python
    - uses: pre-commit/action@v2.0.3
      # https://github.com/pre-commit/action
      #continue-on-error: true

  ubuntu-1804_test_doc:
    runs-on: ubuntu-18.04
    needs: [pep8_check, pre-commit]
    steps:
    - uses: actions/checkout@v2
    - name: apt-get update
      run: sudo apt-get update
    - name: install dependencies (ubuntu packages)
      run: sudo apt-get install python3-fusepy python3-pytest python3-pytest-cov python3-pytest-xdist python3-setuptools git-annex python3-sphinx python3-sphinx-argparse python3-recommonmark latexmk texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra
    - name: setup author identity for git commits
      run: |
        test -n "$(git config user.name)" || git config --global user.name $USER
        hostname=$HOSTNAME
        test -n "$hostname" || hostname="runner"
        test -n "$(git config user.email)" || git config --global user.email $(git config user.name)@$hostname
    - name: local unittest
      run: env python3 setup.py run_unittest --src local
    - name: local pytest
      run: env python3 setup.py run_pytest --src local
    - name: install fuse_git_bare_fs
      run: pip3 install .
    - name: unittest
      run: env python3 setup.py run_unittest
    - name: pytest
      run: env python3 setup.py run_pytest --parallel --coverage
    - name: build doc
      run: ./create_doc

  ubuntu-2004_test_doc:
    needs: [pep8_check, pre-commit]
#    runs-on: ubuntu-latest
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: apt-get update
      run: sudo apt-get update
    - name: install dependencies (ubuntu packages)
      run: sudo apt-get install python3-fusepy python3-pytest python3-pytest-cov python3-pytest-xdist python3-setuptools git-annex python3-sphinx python3-sphinx-argparse python3-recommonmark latexmk texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra
    - name: setup author identity for git commits
      run: |
        test -n "$(git config user.name)" || git config --global user.name $USER
        hostname=$HOSTNAME
        test -n "$hostname" || hostname="runner"
        test -n "$(git config user.email)" || git config --global user.email $(git config user.name)@$hostname
    - name: local unittest
      run: env python3 setup.py run_unittest --src local
    - name: local pytest
      run: env python3 setup.py run_pytest --src local
    - name: install fuse_git_bare_fs
      run: pip3 install .
    - name: unittest
      run: env python3 setup.py run_unittest
    - name: pytest
      run: env python3 setup.py run_pytest --parallel --coverage
    - name: build doc
      run: ./create_doc

  opensuse_leap_152_test:
    runs-on: ubuntu-latest
    needs: [pep8_check, pre-commit]
    name: opensuse leap 15.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: run test_suite in opensuse/leap:15.2
        run: sudo docker run --mount type=bind,source=$(pwd),destination=/app --rm --device /dev/fuse --cap-add SYS_ADMIN --security-opt apparmor:unconfined opensuse/leap:15.2 app/.github/workflows/do_test_opensuse_leap:15.2

  opensuse_leap_153_test:
    runs-on: ubuntu-latest
    needs: [pep8_check, pre-commit]
    name: opensuse leap 15.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: run test_suite in opensuse/leap:15.3
        run: sudo docker run --mount type=bind,source=$(pwd),destination=/app --rm --device /dev/fuse --cap-add SYS_ADMIN --security-opt apparmor:unconfined opensuse/leap:15.3 app/.github/workflows/do_test_opensuse_leap:15.3

  deploy_pages:
    # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
    runs-on: ubuntu-latest
    needs: [ubuntu-1804_test_doc, ubuntu-2004_test_doc, opensuse_leap_152_test, opensuse_leap_153_test]
    steps:
    - uses: actions/checkout@v2
    - name: apt-get update
      run: sudo apt-get update
    - name: install dependencies (ubuntu packages)
      run: sudo apt-get install python3-fusepy python3-pytest python3-pytest-cov python3-pytest-xdist python3-setuptools git-annex python3-sphinx python3-sphinx-argparse python3-recommonmark latexmk texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra
    - name: setup author identity for git commits
      run: |
        test -n "$(git config user.name)" || git config --global user.name $USER
        hostname=$HOSTNAME
        test -n "$hostname" || hostname="runner"
        test -n "$(git config user.email)" || git config --global user.email $(git config user.name)@$hostname
    - name: install fuse_git_bare_fs
      run: pip3 install .
    - name: build doc
      run: ./create_doc
    - name: deploy pages
      if: ${{ github.event_name == 'push' }}
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: documentation
        folder: manual_fuse_git_bare_fs_html
